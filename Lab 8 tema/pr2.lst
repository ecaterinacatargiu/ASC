     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fprintf, printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import fopen msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 626C61626C61626C61-         numefisier db "blablabla.txt",0
    18 00000009 2E74787400         
    19 0000000E 6162256331322A3348-         text db "ab%c12*3Hjrk0(hf**", 0
    19 00000017 6A726B302868662A2A-
    19 00000020 00                 
    20                                      lenText equ $-text
    21 00000021 25232A2829                  spc db "%#*()"
    22                                      lenspc equ $-spc
    23 00000026 7700                        acces db "w", 0
    24 00000028 FFFFFFFF                    fd dd -1
    25                                      
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      ;Se dau un nume de fisier si un text (definite in segmentul de date). Textul contine litere mici, litere mari, cifre si caractere speciale. Sa se inlocuiasca toate caracterele speciale din textul dat cu caracter
    30                                      start:
    31                                          ; ...
    32                                      
    33                                          ; exit(0)
    34 00000000 68[26000000]                    push dword acces
    35 00000005 68[00000000]                    push dword numefisier
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4*2
    38                                          
    39 00000013 A3[28000000]                    mov [fd], eax
    40 00000018 83F800                          cmp eax, 0
    41 0000001B 744A                            je final
    42 0000001D FC                              cld
    43                                          ;prelucare text
    44 0000001E BE[0E000000]                    mov esi, text
    45 00000023 B912000000                      mov ecx, lenText-1
    46                                          repeta:
    47 00000028 AC                                  lodsb;al=<ds:esi>
    48 00000029 BF[21000000]                        mov edi, spc
    49 0000002E 51                                  push ecx
    50 0000002F B905000000                          mov ecx, lenspc
    51                                              compara:
    52 00000034 AE                                      scasb
    53 00000035 7502                                    jne skip
    54 00000037 B058                                    mov al, 'X'
    55                                                  skip
    55          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    56 00000039 E2F9                                loop compara
    57 0000003B 4E                                  dec esi
    58 0000003C 89F7                                mov edi, esi
    59 0000003E AA                                  stosb
    60 0000003F 89FE                                mov esi, edi
    61 00000041 59                                  pop ecx
    62 00000042 E2E4                            loop repeta
    63                                          
    64 00000044 68[0E000000]                    push dword text
    65 00000049 FF35[28000000]                  push dword [fd]
    66 0000004F FF15[00000000]                  call [fprintf]
    67 00000055 83C408                          add esp, 4*2
    68                                          
    69 00000058 FF35[28000000]                  push dword [fd]
    70 0000005E FF15[00000000]                  call [fclose]
    71 00000064 83C404                          add esp, 4*1
    72                                          final:
    73 00000067 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 00000069 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
